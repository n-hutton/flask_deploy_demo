# Configure 'Statefulset' of mysql server
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  labels:
    app: mysql
    tier: database
spec:
  replicas: {{ .Values.db.mysqlreplicaCount}}
  serviceName: "mysql"
  selector: # mysql Pod Should contain same labels 
    matchLabels:
      app: mysql
      tier: database
  template:
    metadata:
      labels: # Must match 'Service' and 'Deployment' selectors
        app: mysql
        tier: database
    spec:
      terminationGracePeriodSeconds: 10
      containers: 
      - image: mysql:latest # image from docker-hub
        name: mysql 
        env:
        - name: MYSQL_ROOT_PASSWORD # Setting Root Password of mysql From a 'Secret'
          valueFrom:
            secretKeyRef:
              name: db-root-credentials # Name of the 'Secret'
              key: password   # 'key' inside the Secret which contains required 'value'
        - name: MYSQL_USER # Setting USER username on mysql From a 'Secret'
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: username
        - name: MYSQL_PASSWORD # Setting USER Password on mysql From a 'Secret'
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: password
        - name: MYSQL_DATABASE # Setting Database Name from a 'ConfigMap'
          valueFrom:
            configMapKeyRef:
              name: db-conf
              key: name
        resources:
            limits:
              cpu: "100m"
            requests:
              cpu: "100m"
                #livenessProbe:
                #  exec:
                #    command: ["mysqladmin", "ping"]
                #  initialDelaySeconds: 30
                #  periodSeconds: 10
                #  timeoutSeconds: 5
        readinessProbe:
          exec:
            #command: ["mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$MYSQL_ROOT_PASSWORD"]
            command: ["mysqladmin", "ping", "-h", "localhost"]
          initialDelaySeconds: 5
          periodSeconds: 2
          timeoutSeconds: 1
                #readinessProbe:
                #  exec:
                #    command:
                #      - "mysqladmin"
                #      - "ping"
                #      - "-h"
                #      - "localhost"
                #      - "-u"
                #      - "root"
                #      - "-p$MYSQL_ROOT_PASSWORD"
                #  initialDelaySeconds: 10
                #  periodSeconds: 5
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:        # Mounting voulume obtained from Persistent Volume Claim
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql #This is the path in the container on which the mounting will take place.
      #volumes:
      #- name: mysql-persistent-storage # Obtaining 'vloume' from PVC
      #  persistentVolumeClaim:
      #    claimName: mysql-pv-claim
  volumeClaimTemplates:
  - metadata:
      name: mysql-persistent-storage
      labels:
        app: mysql
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
